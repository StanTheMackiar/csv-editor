import { getAllRows, NUMBER_REGEX } from '@/helpers';
import { useSheetStore } from '@/stores/useSheetStore';
import { Workbook } from 'exceljs';
import { useShallow } from 'zustand/shallow';

export const useSaveExcel = () => {
  const [name, sheet] = useSheetStore(
    useShallow((state) => [state.name, state.sheet])
  );

  const fileName = `${name}.xlsx`;

  const exportExcel = async () => {
    const workbook = new Workbook();

    workbook.creator = 'Generated by CSV Editor';
    workbook.created = new Date();
    workbook.modified = new Date();
    workbook.calcProperties.fullCalcOnLoad = true;

    const worksheet = workbook.addWorksheet(name);

    const allRows = getAllRows(sheet);

    allRows.forEach((row, rowIndex) => {
      row.forEach((cell, colIndex) => {
        const isNumber = NUMBER_REGEX.test(cell.value);
        const isFormula = cell.value.startsWith('=');
        const targetCell = worksheet.getCell(rowIndex + 1, colIndex + 1);

        if (isFormula) {
          const formula = cell.value.substring(1);
          targetCell.value = { formula }; // Fórmula estándar
        } else {
          targetCell.value = isNumber
            ? Number(cell.value) // Si es número
            : cell.value; // Si es texto
        }
      });
    });

    const buffer = await workbook.xlsx.writeBuffer();
    const blob = new Blob([buffer], {
      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    });

    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = fileName;
    document.body.appendChild(link);
    link.click();

    document.body.removeChild(link);
    URL.revokeObjectURL(link.href);
  };

  return { exportExcel };
};
